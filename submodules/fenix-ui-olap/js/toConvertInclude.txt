
/*function changechkTreeview(){
   FAOSTATOLAPV3.grouped=document.getElementById('chkTreeview').checked;
   FAOSTATOLAPV3.mygrid="";
$("#fx-olap-ui").pivotUI(dataTest2,{"rows":["Area","Item","Year"],"cols":["Element"],"vals":["Value"]},false);
}*/
/*
function utf8_encode(argString) {
 alert("dd")
  if (argString === null || typeof argString === 'undefined') { return ''; }

  var string = (argString + ''); // .replace(/\r\n/g, "\n").replace(/\r/g, "\n");
  var utftext = '', start, end, stringl = 0;

  start = end = 0;
  stringl = string.length;
  for (var n = 0; n < stringl; n++) {
    var c1 = string.charCodeAt(n);
    var enc = null;

    if (c1 < 128) {end++;} else if (c1 > 127 && c1 < 2048) {
      enc = String.fromCharCode(     (c1 >> 6) | 192, (c1 & 63) | 128   );
    } else if ((c1 & 0xF800) != 0xD800) {
      enc = String.fromCharCode(        (c1 >> 12) | 224, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128      );
    } else { // surrogate pairs
      if ((c1 & 0xFC00) != 0xD800) { throw new RangeError('Unmatched trail surrogate at ' + n);      }
      var c2 = string.charCodeAt(++n);
      if ((c2 & 0xFC00) != 0xDC00) {  throw new RangeError('Unmatched lead surrogate at ' + (n - 1));   }
      c1 = ((c1 & 0x3FF) << 10) + (c2 & 0x3FF) + 0x10000;
      enc = String.fromCharCode( (c1 >> 18) | 240, ((c1 >> 12) & 63) | 128, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128 );
    }
    if (enc !== null) {
      if (end > start) {        utftext += string.slice(start, end);      }
      utftext += enc;
      start = end = n + 1;
    }
  }
  if (end > start) {    utftext += string.slice(start, stringl);  }
  return utftext;
}
*/

/*
function ExtractCode(arr, separateur)
{
    ret = [];
    for (i = 0; i < arr.length; i++)
    {
        if (arr[i].type === ">") {   ret.push(separateur + arr[i].code + ">" + separateur);     }
        else {  ret.push(separateur + arr[i].code + separateur);   }
    }
    return ret;
}

function ExtractCodel(arr)//for aggregate
{
    ret = [];
    for (i = 0; i < arr.length; i++){
        if (arr[i].type === ">") {ret.push({'code':arr[i].code,'type':'list'} );  }
    }
    return ret;
}

function checkMemory(){for (var b in window) { if (window.hasOwnProperty(b)){ console.log(b + ' ' + memorySizeOf(eval(b)));}    }}

function memorySizeOf(obj) {
    var bytes = 0;

    function sizeOf(obj) {
        if (obj !== null && obj !== undefined) {
            switch (typeof obj) {
                case 'number':
                    bytes += 8;
                    break;
                case 'string':
                    bytes += obj.length * 2;
                    break;
                case 'boolean':
                    bytes += 4;
                    break;
                case 'object':
                    var objClass = Object.prototype.toString.call(obj).slice(8, -1);
                    if (objClass === 'Object' || objClass === 'Array') {
                        for (var key in obj) {
                            if (!obj.hasOwnProperty(key))
                                continue;
                            sizeOf(obj[key]);
                        }
                    } else
                        bytes += obj.toString().length * 2;
                    break;
            }
        }
        return bytes;
    }
    ;

    function formatByteSize(bytes) {
        if (bytes < 1024)
            return bytes + " bytes";
        else if (bytes < 1048576)
            return(bytes / 1024).toFixed(3) + " KiB";
        else if (bytes < 1073741824)
            return(bytes / 1048576).toFixed(3) + " MiB";
        else
            return(bytes / 1073741824).toFixed(3) + " GiB";
    }
    ;

    return formatByteSize(sizeOf(obj));
}
*/
/*
function oldSchoolCSV(format)
{
    var selectFinal = "EXECUTE Warehouse.dbo.usp_GetDataTESTP " +
            " @DomainCode = '" + F3DWLD.CONFIG.domainCode + "',  " +
            " @lang = '" + F3DWLD.CONFIG.lang + "',  " +
            " @List1Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[0], "''") + ")', " +
            "  @List2Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[1], "''") + ")',  " +
            " @List3Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[2], "''") + ")', " +
            "  @List4Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[3], "") + ")', " +
            "   @List5Codes = '',  " +
            "   @List6Codes = '',  " +
            "   @List7Codes = '',  " +
            "   @NullValues = 0,  " +
            "   @Thousand = '',  " +
            "   @Decimal = '.',  " +
            "   @DecPlaces = 2 , " +
            "  @Limit ="+FAOSTATNEWOLAP.pivotlimitExcel ;

var mesOptionsPivot = {};
for(var j in FAOSTATOLAP2.options)
{mesOptionsPivot[j]=FAOSTATOLAP2.options[j];}
mesOptionsPivot.lang=F3DWLD.CONFIG.lang;
    if (F3DWLD.CONFIG.domainCode == "HS" ||F3DWLD.CONFIG.domainCode == "TM" || F3DWLD.CONFIG.domainCode == "FT") {
        mesOptionsPivot.rows=["Reporter Countries","Partner Countries","Item","Element"];
	mesOptionsPivot.cols= ["Year"];
        selectFinal = "EXECUTE Warehouse.dbo.usp_GetData " +
            " @DomainCode = '" + F3DWLD.CONFIG.domainCode + "',  " +
            " @lang = '" + F3DWLD.CONFIG.lang + "',  " +
            " @List1Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[0], "''") + ")', " +
            "  @List2Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[1], "''") + ")',  " +
            " @List3Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[2], "''") + ")', " +
            "  @List4Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[3], "''") + ")', " +
            "   @List5Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[4], "") + ")',  " +
            "   @List6Codes = '',  " +
            "   @List7Codes = '',  " +
            "   @NullValues = 0,  " +
            "   @Thousand = '',  " +
            "   @Decimal = '.',  " +
            "   @DecPlaces = 2 , " +
            "  @Limit ="+FAOSTATNEWOLAP.pivotlimitExcel ;
}
if(FAOSTATNEWOLAP.firstCall==0){
    mesOptionsPivot.rows = FAOSTATNEWOLAP.internalData.rowAttrs;
    mesOptionsPivot.cols = FAOSTATNEWOLAP.internalData.colAttrs;}
else{mesOptionsPivot.rows =null;mesOptionsPivot.cols=null}
    mesOptionsPivot.vals = ["Value"];
    mesOptionsPivot.domain = F3DWLD.CONFIG.domainCode;
    if (F3DWLD.CONFIG.wdsPayload.showUnits){ mesOptionsPivot.vals.push("Unit");}
    if (F3DWLD.CONFIG.wdsPayload.showFlags){  mesOptionsPivot.vals.push("Flag");}


document.getElementById('CSVOLAPsql').value= selectFinal;  
document.getElementById('CSVOLAPjson').value= JSON.stringify(mesOptionsPivot);
document.getElementById('CSVOLAPoption').value= JSON.stringify({decimal:FAOSTATNEWOLAP.decimal,
    decimalSeparator:FAOSTATNEWOLAP.decimalSeparator,
    thousandSeparator:FAOSTATNEWOLAP.thousandSeparator,
    showUnits:F3DWLD.CONFIG.wdsPayload.showUnits,
 showFlags:F3DWLD.CONFIG.wdsPayload.showFlags, 
 showCodes:F3DWLD.CONFIG.wdsPayload.showCodes,
fileFormat:format 
    });
document.getElementById('exportCSVOLAP').submit();   
}*/
/*
function oldSchool(maLimit, excel){
    var selectFinal = "EXECUTE Warehouse.dbo.usp_GetDataTESTP " +
            " @DomainCode = '" + F3DWLD.CONFIG.domainCode + "',  " +
            " @lang = '" + F3DWLD.CONFIG.lang + "',  " +
            " @List1Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[0], "''") + ")', " +
            "  @List2Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[1], "''") + ")',  " +
            " @List3Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[2], "''") + ")', " +
            "  @List4Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[3], "") + ")', " +
            "   @List5Codes = '',  " +
            "   @List6Codes = '',  " +
            "   @List7Codes = '',  " +
            "   @NullValues = 0,  " +
            "   @Thousand = '',  " +
            "   @Decimal = '.',  " +
            "   @DecPlaces = "+FAOSTATNEWOLAP.decimal+" , " +
            "  @Limit =" + maLimit;

    if (F3DWLD.CONFIG.domainCode == "HS" || F3DWLD.CONFIG.domainCode == "TM" || F3DWLD.CONFIG.domainCode == "FT") {
	selectFinal = "EXECUTE Warehouse.dbo.usp_GetData " +
            " @DomainCode = '" + F3DWLD.CONFIG.domainCode + "',  " +
            " @lang = '" + F3DWLD.CONFIG.lang + "',  " +
            " @List1Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[0], "''") + ")', " +
            "  @List2Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[1], "''") + ")',  " +
            " @List3Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[2], "''") + ")', " +
            "  @List4Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[3], "''") + ")', " +
            "   @List5Codes = '(" + ExtractCode(F3DWLD.CONFIG.selectedValues[4], "") + ")',  " +
            "   @List6Codes = '',  " +
            "   @List7Codes = '',  " +
            "   @NullValues = 0,  " +
            "   @Thousand = '',  " +
            "   @Decimal = '.',  " +
            "   @DecPlaces = "+FAOSTATNEWOLAP.decimal+" , " +
            "  @Limit ="+FAOSTATNEWOLAP.pivotlimitExcel ;
    }
    var test2 = {
        datasource: F3DWLD.CONFIG.datasource,thousandSeparator: ',',decimalSeparator: '.',decimalNumbers: '2',
        json: JSON.stringify({"limit": null,   "query": selectFinal, "frequency": "NONE"}),cssFilename: '',valueIndex: 5};
    $("#fx-olap-ui").html("<center><img src=\"/faostat-download-js/pivotAgg/Preload.gif\" /></center>");
    
    FAOSTATNEWOLAP.flags = {};
    $.ajax({
        type: 'POST', url: F3DWLD.CONFIG.data_url + "/table/json", data: test2,
        success: function(response_1) {
            var response2_2 =[];
            var mesOptionsPivot = {};
            var t=retConfig(F3DWLD.CONFIG.domainCode,F3DWLD.CONFIG.lang);
            response2_2=t[0];
            mesOptionsPivot=t[1];
            response_1 = response2_2.concat(response_1);
            FAOSTATNEWOLAP.firstCall = 0;
            var derivers = $.pivotUtilities.derivers;
            var renderers = $.extend($.pivotUtilities.renderers, $.pivotUtilities.gchart_renderers);
            mesOptionsPivot.vals = ["Value"];
            if (F3DWLD.CONFIG.wdsPayload.showUnits) {mesOptionsPivot.vals.push("Unit");}
            if (F3DWLD.CONFIG.wdsPayload.showFlags){mesOptionsPivot.vals.push("Flag"); }
            FAOSTATNEWOLAP.originalData = response_1;
            $("#fx-olap-ui").pivotUI(response_1, mesOptionsPivot, true);
            $("#options_menu_box").css("display", "block");
            var newFlag = "";
            for (var i in FAOSTATNEWOLAP.flags) 
				{if (newFlag != "") {  newFlag += ":";} newFlag += "'" + i + "'"; }
            if (newFlag == "") {newFlag = "''";}

            $.get("http://faostat3.fao.org/faostat.olap.ws/rest/GetFlags/" + F3DWLD.CONFIG.lang + "/" + newFlag, function(data) 
			{
                data = data.replace("localhost:8080/", "faostat3.fao.org/");
                $("#mesFlags").append(data);
                 if(excel){decolrowspanNEW();}
            });
        }
    });

}*/
/*
function newFunctions() {
    FAOSTATNEWOLAP.viewVals = 1;
    $("#vals").css("display", "block");
    $("#unused").css("display", "block");
    $("#unused li").css("display", "inline");
    $(".pvtRenderer").css("display", "block");
    $("#aggregator").css("display", "block");
    $("#unused").css("background-color", "#ececec");
    $("#unused li nobr").css("color", "#666");
}*/
/*
function changeNested(){
    if (document.getElementById('cbNestedBy').checked) {FAOSTATNEWOLAP.nestedby = 1; }
    else {FAOSTATNEWOLAP.nestedby = 0;}
}
*/
/*
function directExcel(query){
    var sql = {};
    sql.query = "SELECT D.ItemCode, D.ElementCode, AVG(D.value) " +
            "FROM Data AS D " +
            "WHERE D.DomainCode IN ('GT', 'GM', 'GE', 'GR', 'GY', 'GU', 'GP', 'GA', 'GV', 'GB') " +
            "AND D.AreaCode = 10 " +
            "AND D.ElementCode IN (7244, 7243, 72254, 72256, 72306, 72255, 7243, 72343, 72341, 72342, 72308, 72340, 7237, 72259, 72309, 72257, 72307) " +
            "AND D.ItemCode IN (1711, 1755, 27, 1709, 3107, 1712, 6729, 5057, 6795) " +
            "GROUP BY D.ItemCode, D.ElementCode";
    var data = {};
    data.datasource = FAOSTATDownload.datasource; 
    data.thousandSeparator = ',';
    data.decimalSeparator = '.';
    data.decimalNumbers = 2;
    data.json = JSON.stringify({"limit": null,"query": query, "frequency": "NONE"}),
    data.cssFilename = '';
    data.nowrap = false;
    data.valuesIndex = 0;
    $('#datasource_WQ').val(FAOSTATDownload.datasource);
    $('#json_WQ').val(data.json);
    document.excelFormWithQuotes.submit();
}
*/
/*
function directCSV(query) {
    var sql = {};
    sql.query = "SELECT D.ItemCode, D.ElementCode, AVG(D.value) " +
            "FROM Data AS D " +
            "WHERE D.DomainCode IN ('GT', 'GM', 'GE', 'GR', 'GY', 'GU', 'GP', 'GA', 'GV', 'GB') " +
            "AND D.AreaCode = 10 " +
            "AND D.ElementCode IN (7244, 7243, 72254, 72256, 72306, 72255, 7243, 72343, 72341, 72342, 72308, 72340, 7237, 72259, 72309, 72257, 72307) " +
            "AND D.ItemCode IN (1711, 1755, 27, 1709, 3107, 1712, 6729, 5057, 6795) " +
            "GROUP BY D.ItemCode, D.ElementCode";
    var data = {};
    data.datasource = FAOSTATDownload.datasource;
    data.thousandSeparator = ',';
    data.decimalSeparator = '.';
    data.decimalNumbers = 2;
    data.json = JSON.stringify({"limit": null, "query": query,"frequency": "NONE" }),
    data.cssFilename = '';
    data.nowrap = false;
    data.valuesIndex = 0;
    $('#datasource_WQ_csv').val(FAOSTATDownload.datasource);
    $('#json_WQ_csv').val(data.json);
    document.csvFormWithQuotes.submit();
}
*/
/*
function ExcelComplete2(outputFormat){
    FAOSTATNEWOLAP.PP = {PP1: [], PP2: [], PP3: []};
    for (i = 0; i < document.getElementById('rows').getElementsByTagName('nobr').length; i++){
        var d = document.getElementById('rows').getElementsByTagName('nobr')[i];
        FAOSTATNEWOLAP.PP.PP3.push(d.innerHTML);
    }
    for (i = 0; i < document.getElementById('cols').getElementsByTagName('nobr').length; i++){
        var d = document.getElementById('cols').getElementsByTagName('nobr')[i];
        jj = -1;   title = "";
        for (j = 0; j < FAOSTATNEWOLAP.schema.length; j++) {
            if (FAOSTATNEWOLAP.schema[j][6] == d.innerHTML) {
                jj = parseInt(FAOSTATNEWOLAP.schema[j][4]) - 1;
                title = FAOSTATNEWOLAP.schema[j][1];
                break;
            }
        }
        if (jj > -1) {FAOSTATNEWOLAP.PP.PP1.push({"title": title, "data": F3DWLD.CONFIG.selectedValues[jj]});}
        else { alert('not found' + d.innerHTML);}
    }
}
*/
/*
function ExcelComplete(outputFormat){
    FAOSTATNEWOLAP.PP = {PP1: [], PP2: [], PP3: []};
    for (i = 0; i < document.getElementById('rows').getElementsByTagName('nobr').length; i++){
        var d = document.getElementById('rows').getElementsByTagName('nobr')[i];
        for (j = 0; j < FAOSTATNEWOLAP.schema.length; j++) {
            if (FAOSTATNEWOLAP.schema[j][6] == d.innerHTML) {FAOSTATNEWOLAP.PP.PP3.push(FAOSTATNEWOLAP.schema[j][1]);}
        }
    }
    for (i = 0; i < document.getElementById('cols').getElementsByTagName('nobr').length; i++){
        var d = document.getElementById('cols').getElementsByTagName('nobr')[i];
        jj = -1;  title = "";
        for (j = 0; j < FAOSTATNEWOLAP.schema.length; j++) {
            if (FAOSTATNEWOLAP.schema[j][6] == d.innerHTML){
                jj = parseInt(FAOSTATNEWOLAP.schema[j][4]) - 1;
                title = FAOSTATNEWOLAP.schema[j][1];
                break;
            }
        }
        if (jj > -1) { FAOSTATNEWOLAP.PP.PP1.push({"title": title, "data": F3DWLD.CONFIG.selectedValues[jj]}); }
        else { alert('not found' + d.innerHTML); }
    }
    var data2 = {
        datasource: F3DWLD.CONFIG.datasource,
        thousandSeparator: " ",
        decimalSeparator: ".",
        decimalNumbers: "2",
        json: JSON.stringify({"selects": null,
            "froms": null, "wheres": null,"limit": null,
            "query": "EXECUTE Warehouse.dbo.usp_GetData4 @DomainCode = " + F3DWLD.CONFIG.domainCode + ", " +
                    "@lang = 'E'," +
                    "@List1Codes = " + JSON.stringify(FAOSTATNEWOLAP.excelpayload.list1Codes).replace(/\"/g, "'").replace(/\[/g, "'(").replace(/\]/g, ")'") + "," +
                    "@List2Codes = " + JSON.stringify(FAOSTATNEWOLAP.excelpayload.list2Codes).replace(/\"/g, "'").replace(/\[/g, "'(").replace(/\]/g, ")'") + ", " +
                    "@List3Codes = " + JSON.stringify(FAOSTATNEWOLAP.excelpayload.list3Codes).replace(/\"/g, "'").replace(/\[/g, "'(").replace(/\]/g, ")'") + "," +
                    "@List4Codes = " + JSON.stringify(FAOSTATNEWOLAP.excelpayload.list4Codes).replace(/\"/g, "'").replace(/\[/g, "'(").replace(/\]/g, ")'") + ", " +
                    "@List5Codes = '', @List6Codes = '',  @List7Codes = '', " +
                    "@NullValues = 0, " +
                    "@Thousand = ''," +
                    "@Decimal = ',',  " +
                    "@DecPlaces = 2, " +
                    "@Pivot1=" + retPivot1() + "," +
                    "@Pivot2=" + retPivot2() + "," +
                    "@Pivot3='" + retPivot3() + "'",
            "frequency": "NONE"}),   cssFilename: "faostat", valueIndex: 1
    };
 $.ajax({
        type: 'POST', url: F3DWLD.CONFIG.data_url + '/table/' + outputFormat,data: data2,
        success: function(response) {
            document.getElementById('csvData').value = "";
            for (j = 0; j < FAOSTATNEWOLAP.PP.PP3.length; j++){
                if (j > 0) {   document.getElementById('csvData').value += ",";}
                document.getElementById('csvData').value += FAOSTATNEWOLAP.traduction[FAOSTATNEWOLAP.PP.PP3[j]]
            }
            document.getElementById('csvData').value += recHeader("", FAOSTATNEWOLAP.PP.PP1, 0);
            document.getElementById('csvData').value += "\n";
           
            if (outputFormat === 'html') {
                document.getElementById("excelData").value = response;
                document.getElementById("formExcel").submit();
            }
            else {
                for (var i = 0; i < response.length; i++)
                { document.getElementById('csvData').value += '"' + response[i].join('","') + "\"\n"; }
                var r = confirm("Press a button!");
                if (r == true) { document.getElementById('csvDataForm').submit();}
            }
        },
        error: function(err, b, c) {   console.log(err);    }
    });
}
*/
/*
function my_exportNewHTML() {
    monclone = $("#pivot_table").clone();
    $("#renderer", monclone).remove();
    $(".ordre", monclone).remove();
    $("#unused", monclone).remove();
    $("#aggregator", monclone).remove();
    $("#vals", monclone).remove();
    $("#cols", monclone).remove();
    $("#rows", monclone).remove();
    $(".pvtTotalLabel", monclone).remove();
    $(".pvtTotal", monclone).remove();
    $(".invi", monclone).remove();
    $("thead", monclone).remove();
    $(".pvtGrandTotal", monclone).remove();
    $("td", monclone).css("border", "1px solid black");
    $("th", monclone).css("border", "1px solid black");
    $(".table", monclone).css("border", "1px solid black");

    var today = new Date();
    document.getElementById("excelData").value = "<table><tr><td>FAOSTAT " + today.getFullYear() + "</td><td colspan=2>Date : " + today.toLocaleDateString() + "</td></tr></table><table>" + monclone.html() + "</table>";
    document.getElementById("excelData").value += "<table><tr><td></td></tr>";

    var testtd = document.getElementById("hor-minimalist-b").getElementsByTagName('td');
    j = 0;
    for (i = 0; i < testtd.length; i++) {       
        if (j == 0) { document.getElementById("excelData").value += "<tr><td>"; j = 1;}
        else { document.getElementById("excelData").value += "</td><td>";j = 0; }
        document.getElementById("excelData").value += testtd[i].innerHTML;
        if (j == 0) {document.getElementById("excelData").value += "</tr>";}
    }
    document.getElementById("excelData").value += "</table>";
    document.getElementById("formExcel").submit();
}
*/
/*
function stringify(obj) {
  var type = Object.prototype.toString.call(obj);
  // IE8 <= 8 does not have array map
  var map = Array.prototype.map || function map(callback) {
    var ret = [];
    for (var i = 0; i < this.length; i++) { ret.push(callback(this[i]));}
    return ret;
  };
  if (type === '[object Object]') {
    var pairs = [];
    for (var k in obj) {
      if (!obj.hasOwnProperty(k)) continue;
      pairs.push([k, stringify(obj[k])]);
    }
    pairs.sort(function(a, b) { return a[0] < b[0] ? -1 : 1 });
    pairs = map.call(pairs, function(v) {
        if(v[0]!="format" && v[0]!="push" &&  v[0]!="value"){return '"' + v[0].replace(/"/g,"\\\"") + '":' +v[1];}
        else{  return '"' + v[0].replace(/"/g,"\\\"") + '":""'; }
    }
);
    return '{' + pairs + '}';
  }
  if (type === '[object Array]') {  return '[' + map.call(obj, function(v) {  return stringify(v) }) + ']';  }
  return JSON.stringify(obj);
};
*/
/*
function my_exportNew() {
  var mycols=[];
  for(var c=0;c<FAOSTATNEWOLAP.internalData.rowAttrs.length;c++)
  { mycols.push(FAOSTATNEWOLAP.internalData.rowAttrs[c]+"Name");     
  }
  flatColKeyst=[];
tt=FAOSTATNEWOLAP.internalData.getColKeys();
for(tti in tt){flatColKeyst.push(tt[tti].join("||"))}
 document.getElementById("myJson").value=stringify( {data:FAOSTATNEWOLAP.internalData.tree,
     header:flatColKeyst,cols:mycols,swUnit:"1" ,swFlag:"1"
 
    });

    document.getElementById("xlsDataForm").submit();
  }
*/
/*
function decolrowspanNEW(){
    
    var today = new Date();
    var reg = new RegExp("<span class=\"ordre\">[0-9]+</span>", "g");
    var reg3 = new RegExp("<span class=\"ordre\"></span>", "g");
    var reg2 = new RegExp("<table class=\"innerCol\"><th>([0-9]+)</th><th>([^>]*)</th></table>", "g"); 
    var row = FAOSTATNEWOLAP.internalData.tree;
  //  var col = FAOSTATNEWOLAP.internalData.flatColKeys.sort();
flatColKeyst=[];
tt=FAOSTATNEWOLAP.internalData.getColKeys();
for(tti in tt){flatColKeyst.push(tt[tti].join("||"))}
    var col = flatColKeyst.sort();
    var ret = "";
    for (var j = 0; j < FAOSTATNEWOLAP.internalData.rowKeys[0].length; j++) {
      if (F3DWLD.CONFIG.wdsPayload.showCodes) { ret += "Code,";  }
        ret += '"'+FAOSTATNEWOLAP.internalData.rowAttrs[j].replace("_", "") + "\",";
    }
   
    for (j in col){
        ret += '"'+col[j].replace(/,/g, "").replace(/\|\|/g, "-").replace(/&nbsp;/g, "").replace(reg2, "$1").replace(reg, "").replace(reg3, "")+'"';
        if (FAOSTATNEWOLAP.showUnits) { ret += ",unit"; }
        if (FAOSTATNEWOLAP.showFlags) {ret += ",flag"; }
        ret += ",";
    }
    ret += "\n";
    for (i in row) {
        var temp=i.split("||");
       for(var count=0;count<temp.length;count++)
       {ret+='"'+temp[count].replace(/,/g, "").replace(reg2, "$1\",\"$2").replace(reg, "").replace(reg3, "")+"\",";}
        for (j in col) {
            try {
                if (!row[i][col[j]]) {
                    ret += ",";
                    if (FAOSTATNEWOLAP.showUnits) {    ret += ","; }
                    if (FAOSTATNEWOLAP.showFlags) { ret += ","; }
                }
                else {
                    ret += '"' + addCommas(row[i][col[j]].value()[0]) + '",';
                    if (FAOSTATNEWOLAP.showUnits) {    ret +=  '"' + addCommas(row[i][col[j]].value()[1]) + '",'; }
                    if (FAOSTATNEWOLAP.showFlags) { ret +=  '"' + addCommas(row[i][col[j]].value()[2]) + '",'; }
				
                    }
                }  catch (ER) {}
        }
        ret += "\n";
    }
   try{ var testtd = document.getElementById("hor-minimalist-b").getElementsByTagName('td');
    j = 0;
    for (i = 0; i < testtd.length; i++) {
        if (j == 0) {   ret += "\n";     j = 1;  }
        else {ret += ",";  j = 0;   }
        ret += testtd[i].innerHTML;
    }
}catch(e){ console.log("WS getFlag not available");}
    ret += "\n\nFAOSTAT " + today.getFullYear() + ", Date : " + today.toLocaleDateString() + "\n";
    var link = document.createElement("a");
    if (link.download !== undefined) { // feature detection
        // Browsers that support HTML5 download attribute
        var blob = new Blob(["\ufeff",ret], {type: 'text/csv;charset=UTF-8;'});
        var url = URL.createObjectURL(blob);
        link.setAttribute("href", url);
        link.setAttribute("download", "fileName.csv");
        link.style = "visibility:hidden";
    }
    else if (navigator.msSaveBlob) { // IE 10+
        link.addEventListener("click", function(event) {
            var blob = new Blob(["\ufeff",ret], { "type": "text/csv;charset=UTF-8;"});
            navigator.msSaveBlob(blob, "fileName.csv");
        }, false);
    }
    else{ document.getElementById('csvData').value=ret;   document.getElementById('csvDataForm').submit();}
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}*/
/*
function decolrowspanExcell(table){
    var today = new Date(); 
    ret="";
    ret += "FAOSTAT " + today.getFullYear() + ", Date : " + today.toLocaleDateString() + "\n";
    
    var link = document.createElement("a");
    if (link.download !== undefined) { // feature detection
        // Browsers that support HTML5 download attribute
        var blob = new Blob(["\ufeff",ret,table], {type: 'text/csv;charset=UTF-8;'});
        var url = URL.createObjectURL(blob);
        link.setAttribute("href", url);
        link.setAttribute("download", "fileName.xls");
        link.style = "visibility:hidden";
    }
    else  if (navigator.msSaveBlob) { // IE 10+
        link.addEventListener("click", function(event) {
            var blob = new Blob(["\ufeff",ret,table], {"type": "text/csv;charset=UTF-8;"});
            navigator.msSaveBlob(blob, "fileName.xls");
        }, false);
    }
    else{document.getElementById('csvData').value=ret+table;document.getElementById('csvDataForm').submit();}
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}
*/
/*
function showHideTotals() {//Not yet used
    if ($("#cols li nobr").length * $("#rows li nobr").length == 0) {
        $(".pvtTotalLabel").show();
        $(".pvtTotal").show();
        $(".pvtGrandTotal").show();
    }
    else {
        $(".pvtTotalLabel").hide();
        $(".pvtTotal").hide();
        $(".pvtGrandTotal").hide();
    }
}
*/
/*
function my_export(t) {
    monclone = $("#newOlap").clone();
    $("#renderer", monclone).remove();
    $("#unused", monclone).remove();
    $("#aggregator", monclone).remove();
    $("#vals", monclone).remove();
    $("#cols", monclone).remove();
    $("#rows", monclone).remove();
    $(".pvtTotalLabel", monclone).remove();
    $(".pvtTotal", monclone).remove();
    $(".invi", monclone).remove();
    $(".pvtGrandTotal", monclone).remove();
    $("td", monclone).css("border-left", "1px solid black");
    $("td", monclone).css("border-top", "1px solid black");
    $("th", monclone).css("border-left", "1px solid black");
    $("th", monclone).css("border-top", "1px solid black");
    $(".table", monclone).css("border-right", "1px solid black");
    $(".table", monclone).css("border-bottom", "1px solid black");
    document.getElementById("excelData").value = monclone.html();
    document.getElementById("formExcel").submit();
    //var c=window.open('data:application/vnd.ms-excel,'+encodeURIComponent(monclone.html())) ;//t.preventDefault();
    // c.document.write(encodeURIComponent(monclone.html()));
}
*/
/*
function myInitOLAP(){
    monXML = "";
    var mesItems = "";
    var bItem = 0;
    var mesItemsXML = "{name:'ItemCode','nb':'1','val':{";
    var arrItem = $('#gridItemsAggregated').jqxGrid('selectedrowindexes');
    var listItem = "";
    var mySelecteds = F3DWLD.CONFIG.selectedValues;
     for (i = 0; i < mySelecteds.items.length; i++) {
            arr = mySelecteds.items[i];
            if (arr.type == "list") {
                if (listItem == "") {listItem = "[{code:'" + arr.code + "',type:'list'}"; }
                else {listItem += ",{code:'" + arr.code + "',type:'list'}";}
            }
            else {
                if (mesItems == "") {mesItems = arr.code;}
                else { mesItems += "," + arr.code;}
                if (bItem != 0) { mesItemsXML += ",";}
                else { bItem = 1;}
                mesItemsXML += "'" + arr.code + "':{'E':'" + arr.label.replace(/'/g, " ") + "'}";
            }
        }
    
    if (listItem != "") {listItem += "]";}
    else {listItem = "[]";}
    var mesElements = "";
    var mesElementsXML = "{name:'ElementCode','nb':'1','val':{";
    for (i = 0; i < mySelecteds.elements.length; i++) {
        arr = mySelecteds.elements[i];
        if (mesElements == "") { mesElements = arr.code;}
        else {mesElements += "," + arr.code;}
        if (i != 0) {mesElementsXML += ",";}
        mesElementsXML += "'" + arr.code + "':{'E':'" + arr.label.replace(/'/g, " ") + "'}";
    }
    mesElementsXML += "}}";
    var mesCountries = "";
    var bCountry = 0;
    var mesCountriesXML = "{'name':'AreaCode','nb':'1','val':{";
    var listCountry = "";
    for (i = 0; i < mySelecteds.countries.length; i++) {
        arr = mySelecteds.countries[i];
        if (arr.type == "list") {
            if (listCountry == "") {listCountry = "[{code:'" + arr.code + "',type:'list'}"; }
            else { listCountry += ",{code:'" + arr.code + "',type:'list'}";}
        }
        else {
            if (mesCountries == "") {mesCountries = arr.code;}
            else {mesCountries += "," + arr.code;}
            if (bCountry != 0) {mesCountriesXML += ",";} else { bCountry = 1;}
            mesCountriesXML += "'" + arr.code + "':{'E':'" + arr.label.replace(/'/g, " ") + "'}";
        }
    }
    if (listCountry != "" || listCountry == null) {listCountry += "]";}
    else { listCountry = "[]";}
    var data = {};
    data.datasource = FAOSTATDownload.datasource;
    data.domainCode = FAOSTATDownload.domainCode;
    data.language = FAOSTATDownload.language;
    data.countries = listCountry;
    data.items = listItem;

    $.ajax({
        type: 'POST',
        url: 'http://' + FAOSTATDownload.baseurl + '/bletchley/rest/codes/list/post',
        data: data,
        success: function(response) {
            if (response.constructor === String) { response = jQuery.parseJSON(response);}  ;
            testAjax = response[0];
            for (var i = 0; i < testAjax.length; i++){
                testAjax2 = testAjax[i];
                if (mesCountries == "") {  mesCountries = testAjax2.code;}
                else {mesCountries += "," + testAjax2.code;}
                if (bCountry != 0) {mesCountriesXML += ",";}
                else {bCountry = 1;}
                mesCountriesXML += "'" + testAjax2.code + "':{'E':'" + testAjax2.label.replace(/'/g, " ") + "'}";
            }
            mesCountriesXML += "}}";
            testAjax = response[1];
            for (var i = 0; i < testAjax.length; i++) {
                testAjax2 = testAjax[i];
                if (mesItems == "") { mesItems = testAjax2.code;}
                else {mesItems += "," + testAjax2.code;  }
                if (bItem != 0) { mesItemsXML += ",";} else {bItem = 1;}
                mesItemsXML += "'" + testAjax2.code + "':{'E':'" + testAjax2.label.replace(/'/g, " ") + "'}";
            }
            mesItemsXML += "}}";
            var mesYears = "";
            var mesYearsXML = "{'name':'Year',nb:'1','val':{";
            for (i = 0; i < mySelecteds.years.length; i++) {
                arr = mySelecteds.years[i];
                if (mesYears == "") {mesYears = arr.code; }
                else {mesYears += "," + arr.code;}
                if (i != 0) {mesYearsXML += ",";}
                mesYearsXML += "'" + arr.code + "':{'E':'" + arr.label.toString().replace(/'/g, " ") + "'}";
            }
            mesYearsXML += "}}";
            FAOSTATOLAP2.queryParams.json = JSON.stringify(
                    {"selects": [{"aggregation": "NONE", "column": "DOM.DomainNameE", "alias": "Domain"},
                            {"aggregation": "NONE", "column": "A.AreaCode", "alias": "AreaCode"},
                            {"aggregation": "NONE", "column": "A.AreaNameE", "alias": "Area"},
                            {"aggregation": "NONE", "column": "I.ItemCode", "alias": "ItemCode"},
                            {"aggregation": "NONE", "column": "I.ItemNameE", "alias": "Item"},
                            {"aggregation": "NONE", "column": "E.ElementCode", "alias": "ElementCode"},
                            {"aggregation": "NONE", "column": "E.ElementNameE", "alias": "Element"}, {"aggregation": "NONE", "column": "D.Year", "alias": "Year"},
                            {"aggregation": "NONE", "column": "D.Value", "alias": "Value"},
                            {"aggregation": "NONE", "column": "E.UnitNameE", "alias": "Unit"},
                            {"aggregation": "NONE", "column": "Flag", "alias": "Flag"}
                        ], "froms": [{"column": "Data", "alias": "D"}, {"column": "Item", "alias": "I"}, {"column": "Element", "alias": "E"},
                            {"column": "Area", "alias": "A"}, {"column": "Domain", "alias": "DOM"}],
                        "wheres": [
                            {"datatype": "TEXT", "column": "D.DomainCode", "operator": "=", "value": "" + FAOSTATDownload.domainCode + "", "ins": []},
                            {"datatype": "TEXT", "column": "DOM.DomainCode", "operator": "=", "value": "" + FAOSTATDownload.domainCode + "", "ins": []},
                            {"datatype": "DATE", "column": "D.AreaCode", "operator": "=", "value": "A.AreaCode", "ins": []}, {"datatype": "DATE", "column": "D.DomainCode", "operator": "=", "value": "DOM.DomainCode", "ins": []}, {"datatype": "DATE", "column": "D.ItemCode", "operator": "=", "value": "I.ItemCode", "ins": []}, {"datatype": "DATE", "column": "D.ElementCode", "operator": "=", "value": "E.ElementCode", "ins": []}, {"datatype": "TEXT", "column": "D.ElementCode", "operator": "IN", "value": "E.ElementCode", "ins": eval("[" + mesElements + "]")}, {"datatype": "TEXT", "column": "D.AreaCode", "operator": "IN", "value": "A.AreaCode", "ins": eval("[" + mesCountries + "]")}, {"datatype": "TEXT", "column": "D.ItemCode", "operator": "IN", "value": "I.ItemCode", "ins": eval("[" + mesItems + "]")}, {"datatype": "TEXT", "column": "D.Year", "operator": "IN", "value": "D.Year", "ins": eval("[" + mesYears + "]")}], "orderBys": [{"column": "D.Year", "direction": "DESC"}, {"column": "A.AreaNameE", "direction": "ASC"}, {"column": "I.ItemNameE", "direction": "ASC"},
                            {"column": "E.ElementNameE", "direction": "ASC"}], "limit": null, "query": null, "frequency": "NONE"}
            );
            //console.log(mesElements+"#"+mesCountries+"#"+mesItems+"#"+mesYears);
            //myInitOLAP();
            $.post("/wds/rest/table/json", FAOSTATOLAP2.queryParams).done(function(data) {
                data = FAOSTATOLAP2.attr.concat(data);
                $("#newOlap").pivotUI(data, FAOSTATOLAP2.options, FAOSTATOLAP2.displayOption.overwrite);
            });
        }
    });
}
*/
//var internalTest;